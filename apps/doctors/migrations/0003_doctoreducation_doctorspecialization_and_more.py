# Generated by Django 5.2.6 on 2025-09-09 05:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('doctors', '0002_remove_appointment_doctors_app_status_1a9da5_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DoctorEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_type', models.CharField(choices=[('MBBS', 'Bachelor of Medicine, Bachelor of Surgery'), ('MD', 'Doctor of Medicine'), ('MS', 'Master of Surgery'), ('DM', 'Doctorate of Medicine'), ('MCh', 'Master of Chirurgiae'), ('DNB', 'Diplomate of National Board'), ('Fellowship', 'Fellowship'), ('Certificate', 'Certificate Course'), ('Other', 'Other')], help_text='Type of degree or certification', max_length=20)),
                ('degree_name', models.CharField(help_text='Full name of the degree or certification', max_length=200)),
                ('institution', models.CharField(help_text='Institution where degree was obtained', max_length=200)),
                ('year_completed', models.PositiveIntegerField(help_text='Year when degree was completed')),
                ('grade_or_score', models.CharField(blank=True, help_text='Grade, percentage, or CGPA obtained', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Doctor Education',
                'verbose_name_plural': 'Doctor Education Records',
                'ordering': ['-year_completed'],
            },
        ),
        migrations.CreateModel(
            name='DoctorSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the specialization or expertise area', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the specialization')),
                ('years_of_experience', models.PositiveIntegerField(default=0, help_text='Years of experience in this specialization')),
                ('is_primary', models.BooleanField(default=False, help_text="Whether this is the doctor's primary specialization")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Doctor Specialization',
                'verbose_name_plural': 'Doctor Specializations',
                'ordering': ['-is_primary', '-years_of_experience'],
            },
        ),
        migrations.AddField(
            model_name='doctor',
            name='average_rating',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Average rating from patient reviews', max_digits=3),
        ),
        migrations.AddField(
            model_name='doctor',
            name='clinic_name',
            field=models.CharField(blank=True, help_text='Name of the clinic or hospital', max_length=200),
        ),
        migrations.AddField(
            model_name='doctor',
            name='hospital_affiliations',
            field=models.TextField(blank=True, help_text='Hospital affiliations and partnerships'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='is_verified',
            field=models.BooleanField(default=False, help_text="Whether the doctor's credentials are verified"),
        ),
        migrations.AddField(
            model_name='doctor',
            name='languages_spoken',
            field=models.CharField(default='English', help_text='Languages spoken (comma-separated)', max_length=255),
        ),
        migrations.AddField(
            model_name='doctor',
            name='linkedin_profile',
            field=models.URLField(blank=True, help_text='LinkedIn profile URL'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='medical_license_number',
            field=models.CharField(blank=True, help_text='Medical license number', max_length=100),
        ),
        migrations.AddField(
            model_name='doctor',
            name='practice_start_year',
            field=models.PositiveIntegerField(blank=True, help_text='Year when started practicing medicine', null=True),
        ),
        migrations.AddField(
            model_name='doctor',
            name='total_patients',
            field=models.PositiveIntegerField(default=0, help_text='Total number of patients treated'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='total_reviews',
            field=models.PositiveIntegerField(default=0, help_text='Total number of reviews received'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='website',
            field=models.URLField(blank=True, help_text="Doctor's personal or clinic website"),
        ),
        migrations.AddField(
            model_name='review',
            name='communication_rating',
            field=models.IntegerField(blank=True, choices=[(1, '1 Star - Poor'), (2, '2 Stars - Fair'), (3, '3 Stars - Good'), (4, '4 Stars - Very Good'), (5, '5 Stars - Excellent')], help_text='Rating for communication skills', null=True),
        ),
        migrations.AddField(
            model_name='review',
            name='moderated_by',
            field=models.ForeignKey(blank=True, help_text='Admin who moderated this review', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='moderation_notes',
            field=models.TextField(blank=True, help_text='Internal notes about review moderation'),
        ),
        migrations.AddField(
            model_name='review',
            name='treatment_rating',
            field=models.IntegerField(blank=True, choices=[(1, '1 Star - Poor'), (2, '2 Stars - Fair'), (3, '3 Stars - Good'), (4, '4 Stars - Very Good'), (5, '5 Stars - Excellent')], help_text='Rating for treatment effectiveness', null=True),
        ),
        migrations.AddField(
            model_name='review',
            name='waiting_time_rating',
            field=models.IntegerField(blank=True, choices=[(1, '1 Star - Poor'), (2, '2 Stars - Fair'), (3, '3 Stars - Good'), (4, '4 Stars - Very Good'), (5, '5 Stars - Excellent')], help_text='Rating for waiting time experience', null=True),
        ),
        migrations.AddField(
            model_name='review',
            name='would_recommend',
            field=models.BooleanField(blank=True, help_text='Would recommend this doctor to others', null=True),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['average_rating', 'is_available'], name='doctors_doc_average_420967_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['total_reviews', 'is_available'], name='doctors_doc_total_r_2efc60_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['is_verified', 'is_available'], name='doctors_doc_is_veri_51590e_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['specialty', 'city', 'is_available'], name='doctors_doc_special_48d761_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['languages_spoken'], name='doctors_doc_languag_17307d_idx'),
        ),
        migrations.AddField(
            model_name='doctoreducation',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='doctors.doctor'),
        ),
        migrations.AddField(
            model_name='doctorspecialization',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specializations', to='doctors.doctor'),
        ),
        migrations.AlterUniqueTogether(
            name='doctoreducation',
            unique_together={('doctor', 'degree_name', 'institution')},
        ),
        migrations.AlterUniqueTogether(
            name='doctorspecialization',
            unique_together={('doctor', 'name')},
        ),
    ]
