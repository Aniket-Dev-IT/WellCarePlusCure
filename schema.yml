openapi: 3.0.3
info:
  title: FindMyDoctor API
  version: 2.0.0
  description: Modern doctor appointment booking system API
paths:
  /api/v1/appointments/:
    get:
      operationId: api_v1_appointments_list
      description: List appointments
      parameters:
      - in: query
        name: appointment_date
        schema:
          type: string
          format: date
      - in: query
        name: doctor
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - completed
          - confirmed
          - in_progress
          - no_show
          - scheduled
        description: |-
          * `scheduled` - Scheduled
          * `confirmed` - Confirmed
          * `in_progress` - In Progress
          * `completed` - Completed
          * `cancelled` - Cancelled
          * `no_show` - No Show
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentList'
          description: ''
    post:
      operationId: api_v1_appointments_create
      description: Create a new appointment
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
  /api/v1/appointments/{id}/:
    get:
      operationId: api_v1_appointments_retrieve
      description: Get appointment details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appointment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
    put:
      operationId: api_v1_appointments_update
      description: Update appointment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appointment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentUpdate'
          description: ''
    patch:
      operationId: api_v1_appointments_partial_update
      description: Partially update appointment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appointment.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentUpdate'
          description: ''
    delete:
      operationId: api_v1_appointments_destroy
      description: Cancel appointment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Appointment.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/appointments/history/:
    get:
      operationId: api_v1_appointments_history_list
      description: Get user's appointment history
      parameters:
      - in: query
        name: appointment_date
        schema:
          type: string
          format: date
      - in: query
        name: doctor
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - completed
          - confirmed
          - in_progress
          - no_show
          - scheduled
        description: |-
          * `scheduled` - Scheduled
          * `confirmed` - Confirmed
          * `in_progress` - In Progress
          * `completed` - Completed
          * `cancelled` - Cancelled
          * `no_show` - No Show
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentList'
          description: ''
  /api/v1/appointments/upcoming/:
    get:
      operationId: api_v1_appointments_upcoming_list
      description: Get user's upcoming appointments
      parameters:
      - in: query
        name: appointment_date
        schema:
          type: string
          format: date
      - in: query
        name: doctor
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - completed
          - confirmed
          - in_progress
          - no_show
          - scheduled
        description: |-
          * `scheduled` - Scheduled
          * `confirmed` - Confirmed
          * `in_progress` - In Progress
          * `completed` - Completed
          * `cancelled` - Cancelled
          * `no_show` - No Show
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentList'
          description: ''
  /api/v1/availability/:
    get:
      operationId: api_v1_availability_list
      description: List doctor availabilities
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorAvailabilityList'
          description: ''
    post:
      operationId: api_v1_availability_create
      description: Create availability slot
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorAvailabilityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorAvailabilityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorAvailabilityRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAvailability'
          description: ''
  /api/v1/availability/{id}/:
    get:
      operationId: api_v1_availability_retrieve
      description: Get availability details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor Availability.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAvailability'
          description: ''
    put:
      operationId: api_v1_availability_update
      description: Update availability
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor Availability.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorAvailabilityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorAvailabilityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorAvailabilityRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAvailability'
          description: ''
    patch:
      operationId: api_v1_availability_partial_update
      description: ViewSet for managing doctor availability.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor Availability.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDoctorAvailabilityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDoctorAvailabilityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDoctorAvailabilityRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAvailability'
          description: ''
    delete:
      operationId: api_v1_availability_destroy
      description: Delete availability slot
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor Availability.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/doctors/:
    get:
      operationId: api_v1_doctors_list
      description: List all doctors with search and filtering
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorList'
          description: ''
    post:
      operationId: api_v1_doctors_create
      description: Create doctor profile (admin only)
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorCreate'
          description: ''
  /api/v1/doctors/{id}/:
    get:
      operationId: api_v1_doctors_retrieve
      description: Get detailed doctor information
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorDetail'
          description: ''
    put:
      operationId: api_v1_doctors_update
      description: Update doctor profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorUpdate'
          description: ''
    patch:
      operationId: api_v1_doctors_partial_update
      description: Partially update doctor profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDoctorUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDoctorUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDoctorUpdateRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorUpdate'
          description: ''
    delete:
      operationId: api_v1_doctors_destroy
      description: Delete doctor profile (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/doctors/{id}/available_slots/:
    get:
      operationId: api_v1_doctors_available_slots_retrieve
      description: Get doctor's available time slots for a specific date
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          description: ''
  /api/v1/doctors/{id}/book_appointment/:
    post:
      operationId: api_v1_doctors_book_appointment_create
      description: Book an appointment with this doctor
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Doctor.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentBookingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentBookingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentBookingRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
  /api/v1/doctors/search/:
    get:
      operationId: api_v1_doctors_search_list
      description: Search doctors with advanced filters
      parameters:
      - in: query
        name: available_only
        schema:
          type: boolean
          default: false
        description: Show only available doctors
      - in: query
        name: city
        schema:
          type: string
          minLength: 1
        description: Filter by city
      - in: query
        name: gender
        schema:
          type: string
          minLength: 1
        description: Filter by gender
      - in: query
        name: languages
        schema:
          type: string
          minLength: 1
        description: Filter by languages spoken
      - in: query
        name: max_fee
        schema:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        description: Maximum consultation fee
      - in: query
        name: min_experience
        schema:
          type: integer
        description: Minimum years of experience
      - in: query
        name: ordering
        schema:
          type: string
          minLength: 1
        description: 'Order by: rating, experience, fee_low, fee_high'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
          minLength: 1
        description: Search by doctor name
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: specialty
        schema:
          type: string
          minLength: 1
        description: Filter by specialty
      - in: query
        name: state
        schema:
          type: string
          minLength: 1
        description: Filter by state
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorList'
          description: ''
  /api/v1/doctors/specialties/:
    get:
      operationId: api_v1_doctors_specialties_retrieve
      description: Get list of available specialties
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
          description: ''
  /api/v1/reviews/:
    get:
      operationId: api_v1_reviews_list
      description: List doctor reviews
      parameters:
      - in: query
        name: doctor
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: rating
        schema:
          type: integer
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
        description: |-
          * `1` - 1 Star - Poor
          * `2` - 2 Stars - Fair
          * `3` - 3 Stars - Good
          * `4` - 4 Stars - Very Good
          * `5` - 5 Stars - Excellent
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: api_v1_reviews_create
      description: Create a review for a doctor
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/v1/reviews/{id}/:
    get:
      operationId: api_v1_reviews_retrieve
      description: Get review details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: api_v1_reviews_update
      description: Update your review
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_v1_reviews_partial_update
      description: ViewSet for managing doctor reviews.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_v1_reviews_destroy
      description: Delete your review
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Review.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/auth/login/:
    post:
      operationId: api_v1_users_auth_login_create
      description: Login user and return authentication token
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    description: User data
          description: ''
  /api/v1/users/auth/logout/:
    post:
      operationId: api_v1_users_auth_logout_create
      description: Logout user and delete authentication token
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Successfully logged out
          description: ''
  /api/v1/users/profiles/:
    get:
      operationId: api_v1_users_profiles_list
      description: List user profiles (admin only)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserProfileList'
          description: ''
    post:
      operationId: api_v1_users_profiles_create
      description: ViewSet for managing user profiles.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/v1/users/profiles/{id}/:
    get:
      operationId: api_v1_users_profiles_retrieve
      description: Get user profile details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    put:
      operationId: api_v1_users_profiles_update
      description: Update user profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: api_v1_users_profiles_partial_update
      description: Partially update user profile
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    delete:
      operationId: api_v1_users_profiles_destroy
      description: ViewSet for managing user profiles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/register/:
    post:
      operationId: api_v1_users_register_create
      description: Register a new user account
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/stats/:
    get:
      operationId: api_v1_users_stats_retrieve
      description: Get user's appointment and activity statistics
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_appointments:
                    type: integer
                  completed_appointments:
                    type: integer
                  upcoming_appointments:
                    type: integer
                  cancelled_appointments:
                    type: integer
                  profile_completion:
                    type: number
                    format: float
          description: ''
  /api/v1/users/users/:
    get:
      operationId: api_v1_users_users_list
      description: List all users (admin only)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_v1_users_users_create
      description: Create a new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/users/{id}/:
    get:
      operationId: api_v1_users_users_retrieve
      description: Get user details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_users_users_update
      description: Update user information
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_users_users_partial_update
      description: Partially update user information
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_users_users_destroy
      description: Delete user account
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/users/change_password/:
    post:
      operationId: api_v1_users_users_change_password_create
      description: Change user password
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Password changed successfully
          description: ''
  /api/v1/users/users/me/:
    get:
      operationId: api_v1_users_users_me_retrieve
      description: Get current user's profile
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/users/update_profile/:
    patch:
      operationId: api_v1_users_users_update_profile_partial_update
      description: Update current user's profile
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileUpdateRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileUpdate'
          description: ''
components:
  schemas:
    Appointment:
      type: object
      description: Serializer for Appointment model.
      properties:
        id:
          type: integer
          readOnly: true
        doctor:
          allOf:
          - $ref: '#/components/schemas/Doctor'
          readOnly: true
        patient:
          allOf:
          - $ref: '#/components/schemas/UserPublic'
          readOnly: true
        appointment_date:
          type: string
          format: date
          description: Date of the appointment
        appointment_time:
          type: string
          format: time
          description: Time of the appointment
        duration_minutes:
          type: integer
          maximum: 180
          minimum: 15
          description: Duration of appointment in minutes
        status:
          $ref: '#/components/schemas/StatusEnum'
        patient_notes:
          type: string
          description: Notes or symptoms provided by the patient
        doctor_notes:
          type: string
          description: Doctor's notes about the appointment
        patient_phone:
          type: string
          description: Patient's contact phone number
          maxLength: 17
        patient_email:
          type: string
          format: email
          description: Patient's email address
          maxLength: 254
        fee_charged:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Fee charged for this appointment
        is_paid:
          type: boolean
          description: Whether the appointment fee has been paid
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - appointment_date
      - appointment_time
      - created_at
      - doctor
      - id
      - patient
      - updated_at
    AppointmentBookingRequest:
      type: object
      description: Simplified serializer for booking appointments.
      properties:
        doctor:
          type: integer
        appointment_date:
          type: string
          format: date
          description: Date of the appointment
        appointment_time:
          type: string
          format: time
          description: Time of the appointment
        patient_notes:
          type: string
          description: Notes or symptoms provided by the patient
      required:
      - appointment_date
      - appointment_time
      - doctor
    AppointmentRequest:
      type: object
      description: Serializer for Appointment model.
      properties:
        appointment_date:
          type: string
          format: date
          description: Date of the appointment
        appointment_time:
          type: string
          format: time
          description: Time of the appointment
        duration_minutes:
          type: integer
          maximum: 180
          minimum: 15
          description: Duration of appointment in minutes
        status:
          $ref: '#/components/schemas/StatusEnum'
        patient_notes:
          type: string
          description: Notes or symptoms provided by the patient
        doctor_notes:
          type: string
          description: Doctor's notes about the appointment
        patient_phone:
          type: string
          description: Patient's contact phone number
          maxLength: 17
        patient_email:
          type: string
          format: email
          description: Patient's email address
          maxLength: 254
        fee_charged:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Fee charged for this appointment
        is_paid:
          type: boolean
          description: Whether the appointment fee has been paid
        doctor_id:
          type: integer
          writeOnly: true
        patient_id:
          type: integer
          writeOnly: true
      required:
      - appointment_date
      - appointment_time
      - doctor_id
    AppointmentUpdate:
      type: object
      description: Serializer for updating appointment status and notes.
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        patient_notes:
          type: string
          description: Notes or symptoms provided by the patient
        doctor_notes:
          type: string
          description: Doctor's notes about the appointment
    AppointmentUpdateRequest:
      type: object
      description: Serializer for updating appointment status and notes.
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        patient_notes:
          type: string
          description: Notes or symptoms provided by the patient
        doctor_notes:
          type: string
          description: Doctor's notes about the appointment
    BlankEnum:
      enum:
      - ''
    BloodGroupEnum:
      enum:
      - A+
      - A-
      - B+
      - B-
      - AB+
      - AB-
      - O+
      - O-
      type: string
      description: |-
        * `A+` - A+
        * `A-` - A-
        * `B+` - B+
        * `B-` - B-
        * `AB+` - AB+
        * `AB-` - AB-
        * `O+` - O+
        * `O-` - O-
    ChangePasswordRequest:
      type: object
      description: Serializer for changing user password.
      properties:
        old_password:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 8
        new_password_confirm:
          type: string
          minLength: 1
      required:
      - new_password
      - new_password_confirm
      - old_password
    DayOfWeekEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      description: |-
        * `0` - Monday
        * `1` - Tuesday
        * `2` - Wednesday
        * `3` - Thursday
        * `4` - Friday
        * `5` - Saturday
        * `6` - Sunday
    Doctor:
      type: object
      description: Serializer for Doctor model.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserPublic'
          readOnly: true
        display_name:
          type: string
          readOnly: true
        first_name:
          type: string
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          description: Professional email address
          maxLength: 254
        address:
          type: string
          description: Complete address of the clinic/hospital
        city:
          type: string
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: uri
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
        is_available:
          type: boolean
          readOnly: true
        average_rating:
          type: number
          format: double
          readOnly: true
        total_reviews:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - average_rating
      - city
      - consultation_fee
      - created_at
      - display_name
      - email
      - experience_years
      - first_name
      - id
      - is_available
      - last_name
      - phone
      - qualification
      - specialty
      - state
      - total_reviews
      - updated_at
      - user
    DoctorAvailability:
      type: object
      description: Serializer for DoctorAvailability model.
      properties:
        id:
          type: integer
          readOnly: true
        doctor:
          type: integer
        day_of_week:
          allOf:
          - $ref: '#/components/schemas/DayOfWeekEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_active:
          type: boolean
      required:
      - day_of_week
      - doctor
      - end_time
      - id
      - start_time
    DoctorAvailabilityRequest:
      type: object
      description: Serializer for DoctorAvailability model.
      properties:
        doctor:
          type: integer
        day_of_week:
          allOf:
          - $ref: '#/components/schemas/DayOfWeekEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_active:
          type: boolean
      required:
      - day_of_week
      - doctor
      - end_time
      - start_time
    DoctorCreate:
      type: object
      description: Serializer for creating doctor profile.
      properties:
        first_name:
          type: string
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          description: Professional email address
          maxLength: 254
        address:
          type: string
          description: Complete address of the clinic/hospital
        city:
          type: string
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: uri
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
      required:
      - address
      - city
      - consultation_fee
      - email
      - experience_years
      - first_name
      - last_name
      - phone
      - qualification
      - specialty
      - state
    DoctorCreateRequest:
      type: object
      description: Serializer for creating doctor profile.
      properties:
        first_name:
          type: string
          minLength: 1
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          minLength: 1
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          minLength: 1
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          minLength: 1
          description: Professional email address
          maxLength: 254
        address:
          type: string
          minLength: 1
          description: Complete address of the clinic/hospital
        city:
          type: string
          minLength: 1
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: binary
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
      required:
      - address
      - city
      - consultation_fee
      - email
      - experience_years
      - first_name
      - last_name
      - phone
      - qualification
      - specialty
      - state
    DoctorDetail:
      type: object
      description: Extended serializer for doctor detail view with additional information.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/UserPublic'
          readOnly: true
        display_name:
          type: string
          readOnly: true
        first_name:
          type: string
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          description: Professional email address
          maxLength: 254
        address:
          type: string
          description: Complete address of the clinic/hospital
        city:
          type: string
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: uri
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
        is_available:
          type: boolean
          readOnly: true
        average_rating:
          type: number
          format: double
          readOnly: true
        total_reviews:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        recent_reviews:
          type: array
          items: {}
          readOnly: true
        availability_today:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - address
      - availability_today
      - average_rating
      - city
      - consultation_fee
      - created_at
      - display_name
      - email
      - experience_years
      - first_name
      - id
      - is_available
      - last_name
      - phone
      - qualification
      - recent_reviews
      - specialty
      - state
      - total_reviews
      - updated_at
      - user
    DoctorRequest:
      type: object
      description: Serializer for Doctor model.
      properties:
        first_name:
          type: string
          minLength: 1
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          minLength: 1
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          minLength: 1
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          minLength: 1
          description: Professional email address
          maxLength: 254
        address:
          type: string
          minLength: 1
          description: Complete address of the clinic/hospital
        city:
          type: string
          minLength: 1
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: binary
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
      required:
      - address
      - city
      - consultation_fee
      - email
      - experience_years
      - first_name
      - last_name
      - phone
      - qualification
      - specialty
      - state
    DoctorUpdate:
      type: object
      description: Serializer for updating doctor profile.
      properties:
        first_name:
          type: string
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          description: Professional email address
          maxLength: 254
        address:
          type: string
          description: Complete address of the clinic/hospital
        city:
          type: string
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: uri
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
      required:
      - address
      - city
      - consultation_fee
      - email
      - experience_years
      - first_name
      - last_name
      - phone
      - qualification
      - specialty
      - state
    DoctorUpdateRequest:
      type: object
      description: Serializer for updating doctor profile.
      properties:
        first_name:
          type: string
          minLength: 1
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          minLength: 1
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          minLength: 1
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          minLength: 1
          description: Professional email address
          maxLength: 254
        address:
          type: string
          minLength: 1
          description: Complete address of the clinic/hospital
        city:
          type: string
          minLength: 1
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: binary
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
      required:
      - address
      - city
      - consultation_fee
      - email
      - experience_years
      - first_name
      - last_name
      - phone
      - qualification
      - specialty
      - state
    GenderEnum:
      enum:
      - M
      - F
      - O
      - P
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
        * `O` - Other
        * `P` - Prefer not to say
    PaginatedAppointmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Appointment'
    PaginatedDoctorAvailabilityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DoctorAvailability'
    PaginatedDoctorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Doctor'
    PaginatedReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserProfileList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
    PatchedAppointmentUpdateRequest:
      type: object
      description: Serializer for updating appointment status and notes.
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        patient_notes:
          type: string
          description: Notes or symptoms provided by the patient
        doctor_notes:
          type: string
          description: Doctor's notes about the appointment
    PatchedDoctorAvailabilityRequest:
      type: object
      description: Serializer for DoctorAvailability model.
      properties:
        doctor:
          type: integer
        day_of_week:
          allOf:
          - $ref: '#/components/schemas/DayOfWeekEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_active:
          type: boolean
    PatchedDoctorUpdateRequest:
      type: object
      description: Serializer for updating doctor profile.
      properties:
        first_name:
          type: string
          minLength: 1
          description: Doctor's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Doctor's last name
          maxLength: 100
        specialty:
          allOf:
          - $ref: '#/components/schemas/SpecialtyEnum'
          description: |-
            Doctor's medical specialty

            * `cardiology` - Cardiology
            * `neurosurgery` - Neurosurgery
            * `acupuncture` - Acupuncture
            * `cardiac_surgery` - Cardiac Surgery
            * `dentistry` - Dentistry
            * `ent` - Ear, Nose, and Throat
            * `gynecologic_oncology` - Gynecologic Oncology
            * `plastic_surgery` - Plastic Surgery
            * `orthopedics` - Orthopedics
            * `pediatrics` - Pediatrics
            * `dermatology` - Dermatology
            * `psychiatry` - Psychiatry
            * `general_medicine` - General Medicine
        qualification:
          type: string
          minLength: 1
          description: Medical qualifications and degrees
          maxLength: 200
        experience_years:
          type: integer
          maximum: 60
          minimum: 0
          description: Years of professional experience
        phone:
          type: string
          minLength: 1
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        email:
          type: string
          format: email
          minLength: 1
          description: Professional email address
          maxLength: 254
        address:
          type: string
          minLength: 1
          description: Complete address of the clinic/hospital
        city:
          type: string
          minLength: 1
          description: City where the doctor practices
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State where the doctor practices
          maxLength: 100
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Consultation fee in local currency
        photo:
          type: string
          format: binary
          description: Professional profile photograph
        bio:
          type: string
          description: Brief professional biography
          maxLength: 1000
    PatchedReviewRequest:
      type: object
      description: Serializer for Review model.
      properties:
        doctor:
          type: integer
        appointment:
          type: integer
          nullable: true
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        comment:
          type: string
          description: Detailed review comment
          maxLength: 1000
    PatchedUserProfileRequest:
      type: object
      description: Serializer for UserProfile model.
      properties:
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        alternate_phone:
          type: string
          description: Alternate contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth
        gender:
          description: |-
            Gender

            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `P` - Prefer not to say
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        address_line1:
          type: string
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          description: Address line 2 (optional)
          maxLength: 255
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        country:
          type: string
          minLength: 1
          description: Country
          maxLength: 100
        postal_code:
          type: string
          description: Postal/ZIP code
          maxLength: 20
        blood_group:
          description: |-
            Blood group

            * `A+` - A+
            * `A-` - A-
            * `B+` - B+
            * `B-` - B-
            * `AB+` - AB+
            * `AB-` - AB-
            * `O+` - O+
            * `O-` - O-
          oneOf:
          - $ref: '#/components/schemas/BloodGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        allergies:
          type: string
          description: Known allergies (separate with commas)
        chronic_conditions:
          type: string
          description: Chronic medical conditions
        medications:
          type: string
          description: Current medications
        emergency_contact_name:
          type: string
          description: Emergency contact person name
          maxLength: 200
        emergency_contact_phone:
          type: string
          description: Emergency contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relation:
          type: string
          description: Relationship with emergency contact
          maxLength: 100
        profile_picture:
          type: string
          format: binary
          description: Profile picture
        email_notifications:
          type: boolean
          description: Receive email notifications
        sms_notifications:
          type: boolean
          description: Receive SMS notifications
    PatchedUserProfileUpdateRequest:
      type: object
      description: Serializer for updating user profile information.
      properties:
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        alternate_phone:
          type: string
          description: Alternate contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth
        gender:
          description: |-
            Gender

            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `P` - Prefer not to say
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        address_line1:
          type: string
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          description: Address line 2 (optional)
          maxLength: 255
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        country:
          type: string
          minLength: 1
          description: Country
          maxLength: 100
        postal_code:
          type: string
          description: Postal/ZIP code
          maxLength: 20
        blood_group:
          description: |-
            Blood group

            * `A+` - A+
            * `A-` - A-
            * `B+` - B+
            * `B-` - B-
            * `AB+` - AB+
            * `AB-` - AB-
            * `O+` - O+
            * `O-` - O-
          oneOf:
          - $ref: '#/components/schemas/BloodGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        allergies:
          type: string
          description: Known allergies (separate with commas)
        chronic_conditions:
          type: string
          description: Chronic medical conditions
        medications:
          type: string
          description: Current medications
        emergency_contact_name:
          type: string
          description: Emergency contact person name
          maxLength: 200
        emergency_contact_phone:
          type: string
          description: Emergency contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relation:
          type: string
          description: Relationship with emergency contact
          maxLength: 100
        profile_picture:
          type: string
          format: binary
          description: Profile picture
        email_notifications:
          type: boolean
          description: Receive email notifications
        sms_notifications:
          type: boolean
          description: Receive SMS notifications
    PatchedUserRequest:
      type: object
      description: Serializer for User model with profile data.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        password:
          type: string
          writeOnly: true
          minLength: 8
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - 1 Star - Poor
        * `2` - 2 Stars - Fair
        * `3` - 3 Stars - Good
        * `4` - 4 Stars - Very Good
        * `5` - 5 Stars - Excellent
    Review:
      type: object
      description: Serializer for Review model.
      properties:
        id:
          type: integer
          readOnly: true
        doctor:
          type: integer
        patient:
          allOf:
          - $ref: '#/components/schemas/UserPublic'
          readOnly: true
        appointment:
          type: integer
          nullable: true
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        comment:
          type: string
          description: Detailed review comment
          maxLength: 1000
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - doctor
      - id
      - patient
      - rating
      - updated_at
    ReviewRequest:
      type: object
      description: Serializer for Review model.
      properties:
        doctor:
          type: integer
        appointment:
          type: integer
          nullable: true
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        comment:
          type: string
          description: Detailed review comment
          maxLength: 1000
      required:
      - doctor
      - rating
    SpecialtyEnum:
      enum:
      - cardiology
      - neurosurgery
      - acupuncture
      - cardiac_surgery
      - dentistry
      - ent
      - gynecologic_oncology
      - plastic_surgery
      - orthopedics
      - pediatrics
      - dermatology
      - psychiatry
      - general_medicine
      type: string
      description: |-
        * `cardiology` - Cardiology
        * `neurosurgery` - Neurosurgery
        * `acupuncture` - Acupuncture
        * `cardiac_surgery` - Cardiac Surgery
        * `dentistry` - Dentistry
        * `ent` - Ear, Nose, and Throat
        * `gynecologic_oncology` - Gynecologic Oncology
        * `plastic_surgery` - Plastic Surgery
        * `orthopedics` - Orthopedics
        * `pediatrics` - Pediatrics
        * `dermatology` - Dermatology
        * `psychiatry` - Psychiatry
        * `general_medicine` - General Medicine
    StatusEnum:
      enum:
      - scheduled
      - confirmed
      - in_progress
      - completed
      - cancelled
      - no_show
      type: string
      description: |-
        * `scheduled` - Scheduled
        * `confirmed` - Confirmed
        * `in_progress` - In Progress
        * `completed` - Completed
        * `cancelled` - Cancelled
        * `no_show` - No Show
    User:
      type: object
      description: Serializer for User model with profile data.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
      required:
      - date_joined
      - email
      - id
      - profile
      - username
    UserProfile:
      type: object
      description: Serializer for UserProfile model.
      properties:
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        alternate_phone:
          type: string
          description: Alternate contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth
        gender:
          description: |-
            Gender

            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `P` - Prefer not to say
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        address_line1:
          type: string
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          description: Address line 2 (optional)
          maxLength: 255
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        country:
          type: string
          description: Country
          maxLength: 100
        postal_code:
          type: string
          description: Postal/ZIP code
          maxLength: 20
        blood_group:
          description: |-
            Blood group

            * `A+` - A+
            * `A-` - A-
            * `B+` - B+
            * `B-` - B-
            * `AB+` - AB+
            * `AB-` - AB-
            * `O+` - O+
            * `O-` - O-
          oneOf:
          - $ref: '#/components/schemas/BloodGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        allergies:
          type: string
          description: Known allergies (separate with commas)
        chronic_conditions:
          type: string
          description: Chronic medical conditions
        medications:
          type: string
          description: Current medications
        emergency_contact_name:
          type: string
          description: Emergency contact person name
          maxLength: 200
        emergency_contact_phone:
          type: string
          description: Emergency contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relation:
          type: string
          description: Relationship with emergency contact
          maxLength: 100
        profile_picture:
          type: string
          format: uri
          description: Profile picture
        email_notifications:
          type: boolean
          description: Receive email notifications
        sms_notifications:
          type: boolean
          description: Receive SMS notifications
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
    UserProfileRequest:
      type: object
      description: Serializer for UserProfile model.
      properties:
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        alternate_phone:
          type: string
          description: Alternate contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth
        gender:
          description: |-
            Gender

            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `P` - Prefer not to say
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        address_line1:
          type: string
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          description: Address line 2 (optional)
          maxLength: 255
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        country:
          type: string
          minLength: 1
          description: Country
          maxLength: 100
        postal_code:
          type: string
          description: Postal/ZIP code
          maxLength: 20
        blood_group:
          description: |-
            Blood group

            * `A+` - A+
            * `A-` - A-
            * `B+` - B+
            * `B-` - B-
            * `AB+` - AB+
            * `AB-` - AB-
            * `O+` - O+
            * `O-` - O-
          oneOf:
          - $ref: '#/components/schemas/BloodGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        allergies:
          type: string
          description: Known allergies (separate with commas)
        chronic_conditions:
          type: string
          description: Chronic medical conditions
        medications:
          type: string
          description: Current medications
        emergency_contact_name:
          type: string
          description: Emergency contact person name
          maxLength: 200
        emergency_contact_phone:
          type: string
          description: Emergency contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relation:
          type: string
          description: Relationship with emergency contact
          maxLength: 100
        profile_picture:
          type: string
          format: binary
          description: Profile picture
        email_notifications:
          type: boolean
          description: Receive email notifications
        sms_notifications:
          type: boolean
          description: Receive SMS notifications
    UserProfileUpdate:
      type: object
      description: Serializer for updating user profile information.
      properties:
        phone:
          type: string
          description: Primary contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        alternate_phone:
          type: string
          description: Alternate contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: Date of birth
        gender:
          description: |-
            Gender

            * `M` - Male
            * `F` - Female
            * `O` - Other
            * `P` - Prefer not to say
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        address_line1:
          type: string
          description: Address line 1
          maxLength: 255
        address_line2:
          type: string
          description: Address line 2 (optional)
          maxLength: 255
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        country:
          type: string
          description: Country
          maxLength: 100
        postal_code:
          type: string
          description: Postal/ZIP code
          maxLength: 20
        blood_group:
          description: |-
            Blood group

            * `A+` - A+
            * `A-` - A-
            * `B+` - B+
            * `B-` - B-
            * `AB+` - AB+
            * `AB-` - AB-
            * `O+` - O+
            * `O-` - O-
          oneOf:
          - $ref: '#/components/schemas/BloodGroupEnum'
          - $ref: '#/components/schemas/BlankEnum'
        allergies:
          type: string
          description: Known allergies (separate with commas)
        chronic_conditions:
          type: string
          description: Chronic medical conditions
        medications:
          type: string
          description: Current medications
        emergency_contact_name:
          type: string
          description: Emergency contact person name
          maxLength: 200
        emergency_contact_phone:
          type: string
          description: Emergency contact phone number
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        emergency_contact_relation:
          type: string
          description: Relationship with emergency contact
          maxLength: 100
        profile_picture:
          type: string
          format: uri
          description: Profile picture
        email_notifications:
          type: boolean
          description: Receive email notifications
        sms_notifications:
          type: boolean
          description: Receive SMS notifications
    UserPublic:
      type: object
      description: Serializer for public user information (used in appointments, etc.).
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
    UserPublicRequest:
      type: object
      description: Serializer for public user information (used in appointments, etc.).
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    UserRegistrationRequest:
      type: object
      description: Serializer for user registration.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 8
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
        phone:
          type: string
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
        city:
          type: string
        state:
          type: string
      required:
      - email
      - first_name
      - last_name
      - password
      - password_confirm
      - username
    UserRequest:
      type: object
      description: Serializer for User model with profile data.
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - email
      - password
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
